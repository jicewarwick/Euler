/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/


#include <iostream>
#include <vector>
#include "Fibonacci.h"

using namespace std;

int main(int argc, const char *argv[])
{
	const int MAX = 4000000;
	Fibonacci seq;
	vector<int> fib;

	int tmp;
	int i = 1;
	fib.push_back(seq.val(i));
	do {
		fib.push_back(tmp);
		i++;
		tmp = seq.val(i);
	} while (tmp < MAX);

	int sum = 0;
	for (int l = 0; l < i; l++) {
		if (fib[l] % 2 == 0) {
			cout << l << '\t' << fib[l] << endl;
			sum += fib[l];
		}
	}

	cout << "The sum is " << sum << endl;

	return 0;
}
